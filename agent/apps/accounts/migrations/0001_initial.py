# Generated by Django 3.1.6 on 2024-05-16 19:14

import agent.apps.accounts.models
import agent.storage_backends
import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('first_name', models.CharField(max_length=150, null=True, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, null=True, verbose_name='last name')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=10, null=True)),
                ('unsubscribed', models.BooleanField(default=False)),
                ('image', models.FileField(blank=True, null=True, storage=agent.storage_backends.PrivateMediaStorage(), upload_to=agent.apps.accounts.models.dating_bio_file_upload_to_path)),
                ('referral_link', models.CharField(blank=True, max_length=255, null=True)),
                ('origin_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('password_updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_giver', models.BooleanField(default=True)),
                ('is_receiver', models.BooleanField(default=False)),
                ('trivia', models.BooleanField(default=True)),
                ('self_gift', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ClientAPIKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100)),
                ('api_key', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Client API Key',
                'verbose_name_plural': 'Client API Keys',
            },
        ),
        migrations.CreateModel(
            name='GiftGiver',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.customuser')),
            ],
            options={
                'verbose_name': 'Gift Giver',
                'verbose_name_plural': 'Gift Givers',
            },
        ),
        migrations.CreateModel(
            name='GiftReceiver',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.customuser')),
                ('gift_giver', models.ManyToManyField(related_name='gift_receivers', to='accounts.GiftGiver')),
            ],
            options={
                'verbose_name': 'Gift Receiver',
                'verbose_name_plural': 'Gift Receivers',
            },
        ),
        migrations.CreateModel(
            name='ExpiringAuthToken',
            fields=[
                ('key', models.CharField(blank=True, max_length=40, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expire_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expiring_auth_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ExpiringAuthToken',
                'verbose_name_plural': 'ExpiringAuthTokens',
            },
        ),
        migrations.CreateModel(
            name='Prereceiver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150, null=True, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, null=True, verbose_name='last name')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=10, null=True)),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('giver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pre_receivers', to='accounts.giftgiver')),
                ('receiver', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.giftreceiver')),
            ],
            options={
                'verbose_name': 'Pre Receiver',
                'verbose_name_plural': 'Pre Receivers',
            },
        ),
        migrations.CreateModel(
            name='InvitationToken',
            fields=[
                ('key', models.CharField(blank=True, max_length=40, primary_key=True, serialize=False)),
                ('user_email', models.EmailField(max_length=254)),
                ('user_first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='first name')),
                ('user_last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='last name')),
                ('user_phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='phone number')),
                ('daily_update', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expire_at', models.DateTimeField(blank=True, null=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver_invitation_tokens', to='accounts.giftreceiver')),
            ],
            options={
                'verbose_name': 'Invitation Token',
                'verbose_name_plural': 'Invitation Tokens',
            },
        ),
        migrations.CreateModel(
            name='DailyUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_daily_update', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gift_giver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='giver_daily_updates', to='accounts.giftgiver')),
                ('gift_receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver_daily_updates', to='accounts.giftreceiver')),
            ],
        ),
    ]
